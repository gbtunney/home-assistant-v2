#####
# Cat Fountain Automations
# todo: workout a way of using dummy to test
#####

- id: "1733562107777"
  alias: Cat Fountain Problem Notification
  description: "Detects and notifies based on problems with: \n- Tank Disconnected \n- Low Water Level.\rNOTE: This automation does NOT set any sensor values."
  triggers:
    - trigger: numeric_state
      entity_id:
        - sensor.cat_fountain_water_volume
      below: 40
      for:
        hours: 0
        minutes: 9
        seconds: 0
      enabled: true
      above: 0
    - trigger: state
      entity_id:
        - binary_sensor.cat_fountain_water_tank_status
      for:
        hours: 0
        minutes: 9
        seconds: 0
      to: "off"
      from: "on"
  conditions:
    - condition: template
      value_template:
        "{{  bool( states('binary_sensor.cat_fountain_wi_fi'),false
        ) }}"
      enabled: true
  actions:
    - variables:
        water_level:
          "{{ states('sensor.cat_fountain_remaining_water') | int(999)
          }}"
        critical_threshold_upper: 30
        critical:
          "{%- if water_level | int(0) <= critical_threshold_upper | int(0)
          %}\n  ON\n{%- else %}\n  OFF\n{%- endif %}\n"
        message:
          'Cat water is {% if critical == "ON" %}extremely low{% endif %} at
          {{ water_level }}% in Area: {{ area_name(trigger.entity_id) }} :: Please fill
          immediately!!'
    - if:
        - condition: template
          value_template:
            "{{ bool( states('binary_sensor.cat_fountain_water_tank_status')
            ,false)}}"
      then:
        - action: script.notification_dispatcher
          metadata: {}
          data:
            message: "{{message}}"
            notification_channel:
              - iPhone
              - iPad
              - macBook
              - persistant
              - sms
              - alexa
            bool_critical: "{{critical}}"
            sound: default
            sms_targets:
              - 7188138156@mms.att.net
            email_targets:
              - gbtunney@mac.com
          alias: Low Water Notification
      else:
        - action: script.notification_dispatcher
          metadata: {}
          data:
            message:
              "Cat fountain tank appears to be disconnected for more than 10 min
              in Area: {{ area_name(trigger.entity_id) }} :: Please fix immediately!!"
            notification_channel:
              - iPhone
              - iPad
              - macBook
              - persistant
              - alexa
            bool_critical: "OFF"
            sound: default
            sms_targets:
              - 7188138156@mms.att.net
            email_targets:
              - gbtunney@mac.com
          alias: Cat Fountain Disconnected Notification
      alias: Notification Conditional
  mode: single

- id: "1734249603918"
  alias: "Sensor: Cat Fountain Water Level"
  description: >
    "- Sets an accurate remaining water level (as in, no zeros when tank disconnected) so stats aren't cluttered with zeros.
    - Determine if the tank has been filled based on if new volume is HIGHER than last recorded.
    - If filled, sets a timestamp variable so there is a 'days since last fill' counter.'"
  triggers:
    - trigger: numeric_state
      entity_id:
        - sensor.cat_fountain_remaining_water
      below: 100
      above: 0
      enabled: true
      for:
        hours: 0
        minutes: 4
        seconds: 0
  conditions:
    - condition: template
      value_template:
        "{{ bool( states('binary_sensor.cat_fountain_water_tank_status'),false
        )and bool( states('binary_sensor.cat_fountain_wi_fi'),false ) }}"
      alias: only run if tank  and wifi are properly connected
      enabled: true
  actions:
    - variables:
        fill_minimum: 20
        trigger_entity_id: "{{ trigger.entity_id }}"
        trigger_value: "{{ states( trigger_entity_id ) | int (999) }}"
        last_known_value:
          "{{ states( 'sensor.cat_fountain_water_volume' ) | int (999)
          }}"
        target_entity: sensor.cat_fountain_days_since_last_fill
    - alias: if tank is FILLED, set last filled timestamp
      if:
        - condition: template
          value_template:
            "{{ bool( (( states('input_number.10g_q_temperature')| int(999)
            -  states( 'sensor.cat_fountain_water_volume' )  | int(999) ) >  fill_minimum|int(999)
            ) ) }} "
      then:
        - action: input_datetime.set_datetime
          metadata: {}
          data:
            timestamp: "{{float(as_timestamp(now()),0)}}"
          target:
            entity_id: input_datetime.cat_fountain_tank_last_filled_date
    - alias: "Sets an accurate remaining water level (as in, no zeros when tank disconnected) "
      sequence:
        - action: input_number.set_value
          metadata: {}
          data:
            value: "{{ states( trigger.entity_id ) | int (999) }}"
          target:
            entity_id: input_number.cat_fountain_water_volume_input
          enabled: true
          alias: Set the input variable, which triggers sensor
  mode: single
