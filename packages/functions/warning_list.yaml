notify:
  - name: STD_Testing
    platform: group
    services:
      - action: func_dispatch_notification
      - action: persistent_notification
  - name: STD_Information
    platform: group
    services:
  - name: STD_Warning
    platform: group
    services:
  - name: STD_Critical
    platform: group
    services:

input_boolean:
  alert_test_mode:
    name: Alert Test Mode
    icon: mdi:test-tube

template:
  - binary_sensor:
      - name: Alert Watch List
        unique_id: binary_sensor.alert_watch_list
        device_class: power
        state: >-
          {% set label_list = label_entities("entity_list_aquarium_group_switch")  %}
          {% set labelOffCount = label_list | select('is_state', 'off') | list|count %}
          {{ bool( labelOffCount | int > 0 ,false)}}

alert:
  test_alert:
    name: Test Alert #name of the alert entity
    message: "This is a test alert" #text you see on the notifiction
    done_message: clear_notification #this allows the notification to be removed from a device when it is acknowledged or cleared
    entity_id: binary_sensor.testing_alert_new #the binary sensor that triggers our alert
    state: "on" #the state that should trigger the alert
    repeat: 1 #repeates every minute
    can_acknowledge: true #without this, no toggle
    data:
      tag: "testalert" # required for iOS notification replacement
      actions:
        - action: "okalerttest" #to trigger our automation
          title: "Acknowledge Alert" #notification button text
    skip_first: false # the alert will trigger immediately, not wait for the first repeat cycle
    notifiers:
      - func_dispatch_notification
      - mobile_app_iphone #where the alert should go to, I use a group for all real alerts, this is just for the test alert

  aquarium_off_info_alert_active:
    name: Aquarium Device Off Alert
    entity_id: binary_sensor.alert_watch_list
    state: "on"
    repeat:
      - 1
    can_acknowledge: true
    skip_first: true
    title: "7580 Info - Aquarium device left off"
    data:
      tag: "testalert" # required for iOS notification replacement
      actions:
        - action: "okalerttest" #to trigger our automation
          title: "Acknowledge Alert" #notification button text
    message: |
      {% set my_label = "entity_list_aquarium_group_switch" %}
      {% set controlling_binary_sensor = 'binary_sensor.alert_watch_list' %}
      {% set label_list = label_entities(my_label) | select('is_state', 'off') |list %}    
      {%- for entity_id in label_list -%}
        {% set entity_name = state_attr(entity_id,"friendly_name") %}
        {% set entity_area_name = area_name(entity_id)  %}
          Entity {{entity_name}} in Area: {{entity_area_name }} has been off since  {{states[entity_id].last_updated }}. Please fix immediately!!
          Entity {{ entity_name }} off for {{ relative_time(states[entity_id].last_updated  ) }} 
          Alerts on area {{entity_area_name}}
      {% endfor %}
      Triggered: {{ as_timestamp(states[controlling_binary_sensor].last_changed) | timestamp_custom('%A %I:%M%p (%d-%b-%Y)') }}
    done_message: "Aquarium  Alert RESOLVED at {{ as_timestamp(states[controlling_binary_sensor].last_changed) | timestamp_custom('%A %I:%M%p (%d-%b-%Y)') }}"
    notifiers:
      - mobile_app_iphone
      - func_dispatch_notification
