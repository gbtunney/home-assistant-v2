notify:
  - name: STD_Testing
    platform: group
    services:
      - action: func_dispatch_notification
      - action: persistent_notification
  - name: STD_Information
    platform: group
    services:
  - name: STD_Warning
    platform: group
    services:
  - name: STD_Critical
    platform: group
    services:

input_boolean:
  warning_alert_irregular_off:
    name: Supress Warning Alert Irregular Off
    # description: "used to supress warnings during clean event"
    icon: mdi:test-tube

template:
  #- use_blueprint:
  #    path: "label_list_binary_sensor.yaml"
  #   input:
  #    label_id: entity_list_aquarium_group_switch
  #    name: "Test Blueprint Alert"
  # unique_id: "gbt_alert_test_blueprintreal"
  #  state_picker: ["off"]

  - binary_sensor:
      - name: Warning Alert Irregular Off
        unique_id: binary_sensor.alert_warning_irregular_off
        state: |
          {% set my_label = "entity_list_aquarium_group_switch" %}
          {% set label_list = label_entities(my_label) | select('is_state', 'off') | list  %}    
          {% set label_count = label_list | count %}
          {{ bool( label_count | int > 0 ,false) }}
alert:
  #TODO: fix timestamps
  warning_irregular_off:
    name: Warning Alert Irregular Off #name of the alert entity
    entity_id: binary_sensor.alert_warning_irregular_off
    state: "on"
    repeat:
      - 1
    can_acknowledge: true
    skip_first: true
    title: "Warning - Aquarium device left off"
    done_message: "Aquarium  Alert RESOLVED"
    notifiers:
      - mobile_app_iphone
      - func_dispatch_notification
    data:
      tag: "testalert" # required for iOS notification replacement
      actions:
        - action: "okalerttest" #to trigger our automation
          title: "Acknowledge Alert" #notification button text
    message: |
      {% set my_label = "entity_list_aquarium_group_switch" %}
      {% set controlling_binary_sensor = 'binary_sensor.alert_watch_list' %}
      {% set label_list = label_entities(my_label) | select('is_state', 'off') |list %}    
      {%- for entity_id in label_list -%}
        {% set entity_name = state_attr(entity_id,"friendly_name") %}
        {% set entity_area_name = area_name(entity_id)  %}
          Entity {{entity_name}} in Area: {{entity_area_name }} has been off since  {{states[entity_id].last_updated }}. Please fix immediately!!
          Entity {{ entity_name }} off for {{ relative_time(states[entity_id].last_updated  ) }} 
          Alerts on area {{entity_area_name}}
      {% endfor %}
      Triggered: {{ as_timestamp(states[controlling_binary_sensor].last_changed) | timestamp_custom('%a %d-%m-%Y %-I:%M %p')}}
      Test self: {{ this.entity_id }} rntity: [{this.entity}}
