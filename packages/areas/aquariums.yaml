#####
# AREA Package: Aquarium
#####

#####
# Aquarium Picker (this version is kind of a pump timer)
#####
script:
  aquarium_selector_v2:
    alias: Aquarium Selector v2
    mode: parallel
    sequence:
      - variables:
          lookup:
            120g: switch.120g_pumps_heaters
            55g: switch.55g_pumps_heaters
            10g Male: switch.10g_m_pumps_heaters
            20g Long: switch.20g_pumps_heaters
            10g Upper: switch.20g_pumps_heaters
            Quarantine: switch.20g_pumps_heaters
          co2_list:
            - switch.10g_m_pumps_heaters
            - switch.20g_pumps_heaters
        alias: CONST ENUM VARIABLES
      - variables:
          aq_list: "{{state_attr('input_select.aquarium','options')}}"
          selected_value: "{{aquarium_picker}}"
          selected_entities:
            "{%- set ns = namespace(entities=[]) %}\n  {%- for value
            in selected_value %}\n  {%- set ns.entities = ns.entities + [lookup[value]]
            %}\n{%- endfor %}{{- ns.entities }}"
          do_notification:
            "{{ bool( end_notification_timer is defined , false )  and
            bool(( end_notification_timer | int(999)  < delay_minutes | int(999) ),false)
            }}"
          first_delay:
            "{% if do_notification %}{{ ( delay_minutes | int(999) - end_notification_timer|int(999)
            )| int(999) }}{% else %}{{ delay_minutes | int(999) }} {% endif %}"
          second_delay:
            "{% if do_notification %}{{  end_notification_timer|int(999) }}{%
            else %}{{ 0 | int(999) }} {% endif %}"
          do_co2:
            "{{ selected_entities | select('in', co2_list) | list | length > 0
            }}"
          friendly_names:
            "{%- set ns = namespace(entities=[]) %}\n  {%- for value in
            selected_value %}\n  {%- set ns.entities = ns.entities + [ state_attr( lookup[value],'friendly_name')]
            %}\n{%- endfor %}{{- ns.entities | join(',')}}"
          message:
            '"{{ second_delay |int(999) }} minute warning! {{ friendly_names  }}
            have been off for {{ first_delay |int(999) }} and will be turning back on
            in {{ second_delay |int(999) }} minutes!!"

            '
      - sequence:
          - action: script.set_state_switch_light
            metadata: {}
            data:
              select_state: "Off"
              bool_invert_state: "Off"
              target_entity_set:
                entity_id: "{{selected_entities}}"
            alias: Turn off pumps
            enabled: true
          - alias: Turn off C02 if needed
            if:
              - condition: template
                value_template:
                  "{{ bool( do_co2 ,false) and bool(states('binary_sensor.aquarium_co2_schedule',false
                  ))  }}"
            then:
              - action: script.set_state_switch_light
                metadata: {}
                data:
                  bool_invert_state: "Off"
                  select_state: "Off"
                  target_entity_set:
                    entity_id: switch.20g_rack_co2
            enabled: true
          - delay:
              hours: 0
              minutes: "{{ first_delay |int }}"
              seconds: 0
              milliseconds: 0
            alias: first delay
            enabled: true
          - alias: if do notification
            if:
              - condition: template
                value_template: "{{ bool(do_notification ,false)}}"
            then:
              - action: script.notification_dispatcher
                metadata: {}
                data:
                  notification_channel:
                    - alexa
                  bool_critical: "OFF"
                  sound: default
                  sms_targets:
                    - 7188138156@mms.att.net
                  email_targets:
                    - gbtunney@mac.com
                  alexa_volume: Maximum Volume
                  alexa_sound: amzn_sfx_doorbell_chime_01
                  message: "{{message}}"
                enabled: true
            enabled: true
          - delay:
              hours: 0
              minutes: "{{ second_delay|int }}"
              seconds: 0
              milliseconds: 0
            alias: second delay
            enabled: true
          - action: script.set_state_switch_light
            metadata: {}
            data:
              select_state: "On"
              bool_invert_state: "Off"
              target_entity_set:
                entity_id: "{{selected_entities}}"
            alias: Turn ON pumps
            enabled: true
          - alias: Turn ON C02 if needed and  if scheduled
            if:
              - condition: template
                value_template:
                  "{{ bool(do_co2 ,false) and bool(states('binary_sensor.aquarium_co2_schedule',false
                  )) }}"
            then:
              - alias: Turn on CO2 if scheduled
                action: script.set_state_switch_light
                metadata: {}
                data:
                  bool_invert_state: "Off"
                  select_state: "Off"
                  target_entity_set:
                    entity_id: switch.20g_rack_co2
                  entity_trigger:
                    entity_id: binary_sensor.aquarium_co2_schedule
            enabled: true
          - if:
              - condition: template
                value_template: "{{ aquarium_clean_notes is defined }} "
            then:
              - repeat:
                  sequence:
                    - action: logbook.log
                      metadata: {}
                      data:
                        name: Aquarium Maintenance
                        message:
                          "Maintenance was logged: {{aquarium_clean_notes | join(',')
                          }}"
                        entity_id: "{{ repeat.item }}"
                  for_each: "{{selected_entities}}"
            alias: "Do logbook entries if filled in "
        enabled: true
    description: ""
    fields:
      aquarium_picker:
        selector:
          select:
            options:
              - 120g
              - 55g
              - 10g Male
              - 20g Long
              - 10g Upper
              - Quarantine
            multiple: true
        required: true
        name: Aquarium Picker
      aquarium_clean_notes:
        selector:
          select:
            options:
              - Water Change (Vacuum)
              - Trim Plants
              - Remove algae
              - Deep Clean
              - Clean Filter
              - Quick water Change (no vacuum)
            multiple: true
            custom_value: true
        name: Aquarium Clean Notes
      delay_minutes:
        selector:
          number:
            min: 15
            max: 245
        name: Delay Minutes
        required: true
        default: 45
      end_notification_timer:
        selector:
          number:
            min: 1
            max: 25
            step: 1
        name: End Notification Timer
        required: false
        default: 5
        description: this cannot be greater than the total time.

  aquarium_selector_v2_5:
    alias: Aquarium Selector v2.5
    sequence:
      - variables:
          lookup:
            120g: switch.120g_pumps_heaters
            55g: switch.55g_pumps_heaters
            10g Male: switch.10g_m_pumps_heaters
            20g Long: switch.20g_pumps_heaters
            10g Upper: switch.20g_pumps_heaters
            Quarantine: switch.20g_pumps_heaters
          co2_list:
            - switch.10g_m_pumps_heaters
            - switch.20g_pumps_heaters
        alias: CONST ENUM VARIABLES
      - variables:
          aq_list: "{{state_attr('input_select.aquarium','options')}}"
          selected_value: "{{aquarium_picker}}"
          selected_entities:
            "{%- set ns = namespace(entities=[]) %}\n  {%- for value
            in selected_value %}\n  {%- set ns.entities = ns.entities + [lookup[value]]
            %}\n{%- endfor %}{{- ns.entities }}"
          do_co2:
            "{{ selected_entities | select('in', co2_list) | list | length > 0
            }}"
          friendly_names:
            "{%- set ns = namespace(entities=[]) %}\n  {%- for value in
            selected_value %}\n  {%- set ns.entities = ns.entities + [ state_attr( lookup[value],'friendly_name')]
            %}\n{%- endfor %}{{- ns.entities | join(',')}}"
      - sequence:
          - action: script.set_state_switch_light
            metadata: {}
            data:
              select_state: "Off"
              bool_invert_state: "Off"
              target_entity_set:
                entity_id: "{{selected_entities}}"
            alias: Turn off pumps
            enabled: true
          - alias: Turn off C02 if needed
            if:
              - condition: template
                value_template:
                  "{{ bool( do_co2 ,false) and bool(states('binary_sensor.aquarium_co2_schedule',false
                  ))  }}"
            then:
              - action: script.set_state_switch_light
                metadata: {}
                data:
                  bool_invert_state: "Off"
                  select_state: "Off"
                  target_entity_set:
                    entity_id: switch.20g_rack_co2
              - action: homeassistant.add_label_to_entity
                metadata: {}
                data:
                  label_id:
                    - entity_watch_list
                  entity_id:
                    - switch.20g_rack_co2
            enabled: true
          - alias: if do notification
            if:
              - condition: template
                value_template: "{{ bool(do_notification ,false)}}"
            then:
              - action: script.notification_dispatcher
                metadata: {}
                data:
                  notification_channel:
                    - alexa
                  bool_critical: "OFF"
                  sound: default
                  sms_targets:
                    - 7188138156@mms.att.net
                  email_targets:
                    - gbtunney@mac.com
                  alexa_volume: Maximum Volume
                  alexa_sound: amzn_sfx_doorbell_chime_01
                  message: "{{message}}"
                enabled: true
            enabled: false
          - alias: "Do logbook entries if filled in "
            if:
              - condition: template
                value_template: "{{ aquarium_clean_notes is defined }} "
            then:
              - repeat:
                  sequence:
                    - action: logbook.log
                      metadata: {}
                      data:
                        name: Aquarium Maintenance
                        message:
                          "Maintenance was logged: {{aquarium_clean_notes | join(',')
                          }}"
                        entity_id: "{{ repeat.item }}"
                    - action: homeassistant.add_label_to_entity
                      metadata: {}
                      data:
                        label_id:
                          - entity_watch_list
                        entity_id:
                          - "{{ repeat.item }}"
                  for_each: "{{selected_entities}}"
          - action: script.set_state_switch_light
            metadata: {}
            data:
              select_state: "On"
              bool_invert_state: "Off"
              target_entity_set:
                entity_id: "{{selected_entities}}"
            alias: Turn ON pumps
            enabled: false
          - alias: Turn ON C02 if needed and  if scheduled
            if:
              - condition: template
                value_template:
                  "{{ bool(do_co2 ,false) and bool(states('binary_sensor.aquarium_co2_schedule',false
                  )) }}"
            then:
              - alias: Turn on CO2 if scheduled
                action: script.set_state_switch_light
                metadata: {}
                data:
                  bool_invert_state: "Off"
                  select_state: "Off"
                  target_entity_set:
                    entity_id: switch.20g_rack_co2
                  entity_trigger:
                    entity_id: binary_sensor.aquarium_co2_schedule
            enabled: false
        enabled: true
      - delay:
          hours: 0
          minutes: "{{ first_delay |int }}"
          seconds: 0
          milliseconds: 0
        alias: first delay
        enabled: false
    mode: parallel
    description: ""
    fields:
      aquarium_picker:
        selector:
          select:
            options:
              - 120g
              - 55g
              - 10g Male
              - 20g Long
              - 10g Upper
              - Quarantine
            multiple: true
        required: true
        name: Aquarium Picker
      aquarium_clean_notes:
        selector:
          select:
            options:
              - Water Change (Vacuum)
              - Trim Plants
              - Remove algae
              - Deep Clean
              - Clean Filter
              - Quick water Change (no vacuum)
            multiple: true
            custom_value: true
        name: Aquarium Clean Notes
    icon: mdi:blinds-open
