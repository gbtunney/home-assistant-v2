notification_sample_scripts:
  alias: Notification Sample Scripts
  sequence:
  - action: script.ha_persistant_notification
    data:
      message: This is a test message over HA!
      title: this is an example title
      iphone: false
  - action: script.sms_notification
    metadata: {}
    data:
      message: This is a test message over sms!
      entity_targets:
      - 7188138156@mms.att.net
      - gbtunney@mac.com
  - action: script.ha_persistant_notification
    data:
      message: This is a test message over HA!
      title: this is an example title
      iphone: false
  - action: script.notify_dispatcher
    metadata: {}
    data: {}
  description: ''
  icon: mdi:bell-outline
llm_vision_describe_scene:
  alias: LLM Vision Describe Scene
  description: 'LLM Vision: Describe the Camera Feed in Sentence'
  fields:
    prompt:
      selector:
        text:
      name: prompt
      required: true
      default: "\"Summarize what's happening in the camera feed (one sentence max).\n
        Don't describe the scene! If there is a person, describe what they're\n doing
        and what they look like. If they look like a courier mention that!\n If nothing
        is happening, say so.\"\n"
  sequence:
  - variables:
      llv_response: undefined
  - action: llmvision.image_analyzer
    metadata: {}
    data:
      include_filename: false
      target_width: 800
      detail: low
      max_tokens: 100
      temperature: 0.5
      provider: 01JDVNFP4KWD6XERDGQ5V3TY6W
      message: '{{ prompt }}'
      remember: false
      expose_images: false
      image_file: /media/{{ states( 'input_text.url_llv')  }}
    response_variable: llv_response
  - action: input_text.set_value
    metadata: {}
    data:
      value: '{{ llv_response }}'
    target:
      entity_id: input_text.llm_response
  icon: mdi:camera
llm_car_in_driveway:
  alias: LLM Car in Driveway
  sequence:
  - data:
      max_tokens: 100
      image_entity:
      - camera.carport
      provider: 01J99F4T99PA1XGQ4CTQS3CP8H
      model: gpt-4o
      target_width: 512
      temperature: 0.5
      detail: low
      include_filename: false
      message: Please check if there is a car in the driveway with the license plate
        "<your_license_plate_number>" and respond with a JSON object. The JSON object
        should have a single key, "car_in_driveway," which should be set to true if
        - and only  if - there is a car with the license number provided above in
        the  driveway and false otherwise.
    response_variable: response
    action: llmvision.image_analyzer
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ (( response.response_text |regex_replace(find=''```json

          '', replace='''', ignorecase=False) |regex_replace(find=''

          ```'', replace='''', ignorecase=False)  ) | from_json).car_in_driveway }}'
        enabled: true
      sequence:
      - target:
          entity_id: input_boolean.car_in_driveway
        data: {}
        action: input_boolean.turn_on
    default:
    - target:
        entity_id: input_boolean.car_in_driveway
      data: {}
      action: input_boolean.turn_off
    enabled: true
  mode: single
  description: ''
llv_prompt_test:
  alias: LLV Prompt Test
  fields:
    prompt:
      selector:
        text:
      name: prompt
      required: true
  sequence:
  - metadata: {}
    data:
      max_tokens: 100
      model: gpt-4o
      provider: 01J99F4T99PA1XGQ4CTQS3CP8H
      target_width: 1280
      include_filename: false
      image_entity:
      - camera.front_door
      - camera.garage
      message: '{{ prompt }}'
    response_variable: response
    action: llmvision.image_analyzer
  - metadata: {}
    data:
      cache: true
      media_player_entity_id: media_player.entity_id
      message: '{{response.response_text}}'
    target:
      entity_id: tts.piper
    action: tts.speak
  description: ''
bring_clothes_in_when_it_rains:
  alias: Bring Clothes in when it rains
  sequence:
  - action: llmvision.image_analyzer
    metadata: {}
    data:
      remember: false
      include_filename: false
      detail: low
      max_tokens: 100
      expose_images: false
      temperature: 0.5
      message: Reply with a simple number, how many pictures of artwork are hanging
        on the wall?
      image_entity:
      - camera.camera_1_q5_profile1
      model: gemini-1.5-flash
      target_width: 512
  - if:
    - condition: template
      value_template: '"{{ gemini.response_text | int > 1 }}"'
    then:
    - action: persistent_notification.create
      metadata: {}
      data:
        message: 'The clothing items were counted.  COUNT: {{ gemini.response_text
          | int }}'
  description: ddd
  icon: mdi:weather-lightning-rainy
llv_numeric_question:
  alias: LLV Numeric Question
  sequence:
  - variables:
      camera_image_file: undefined
      test_count: 0
  - action: script.camera_snapshot_and_upload
    metadata: {}
    data:
      capture_camera_stream:
        entity_id: '{{capture_camera_stream.entity_id }}'
      capture_mime_type: image/png
    response_variable: camera_image_file
  - action: llmvision.data_analyzer
    metadata: {}
    data:
      message: '{{ questions_prompt }}'
      include_filename: false
      target_width: 1280
      detail: high
      max_tokens: 5
      temperature: 0.1
      provider: 01JDVNFP4KWD6XERDGQ5V3TY6W
      sensor_entity: '{{ file_path_save_target.entity_id }}'
      image_file: '{{camera_image_file.media_rel }}'
  description: ''
  fields:
    questions_prompt:
      selector:
        text:
      name: Questions Prompt
      default: Can you count the pictures on the wall ?
      required: true
    file_path_save_target:
      selector:
        target:
          entity:
            domain: input_boolean
      name: File Path Save Target
      required: true
      description: Input text entity to save the file path to
      default:
        entity_id: input_number.llv_picture_wall_count
    capture_camera_stream:
      selector:
        target:
          entity:
            domain: camera
      name: Camera Stream
      default:
        entity_id: camera.camera_1_q5_profile1
      required: true
notification_dispatcher_v2:
  alias: Notification Dispatcher v2
  sequence:
  - variables:
      critical: '{% if bool_critical == ''ON'' %}1{% else %}0{% endif %}'
  - alias: If sms selected
    if:
    - condition: template
      value_template: '{% if ''sms'' in notification_channel %}true{% else %}false{%
        endif %}'
      alias: 'note: sms does not have a title so it inserts it before message'
    then:
    - action: notify.gbtunney_gmail_com
      metadata: {}
      data:
        message: '{% if bool_critical == ''ON'' %}CRITICAL {% else %}{% endif %}Notification
          from Homeassistant: {% if title is defined %}{{ title }} :{% else %}{% endif
          %}{{ message }}'
        title: '{{ title }}'
        target: '{{ sms_targets }}'
    enabled: true
  - alias: If email selected
    if:
    - alias: 'note:  email title == subject. Inserts critical warning in subject'
      condition: template
      value_template: '{% if ''email'' in notification_channel %}true{% else %}false{%
        endif %}'
    then:
    - action: notify.gbtunney_gmail_com
      metadata: {}
      data:
        message: '{{message}}'
        title: '{% if bool_critical == ''ON'' %}CRITICAL {% else %}{% endif %}Notification
          from Homeassistant{% if title is defined %}: {{ title }}{% else %}{% endif
          %}'
        target: '{{ email_targets }}'
    enabled: true
  - alias: If alexa selected
    if:
    - condition: template
      value_template: '{% if ''alexa'' in notification_channel %}true{% else %}false{%
        endif %}'
    then:
    - action: notify.alexa_media_alexa_s_baby
      metadata: {}
      data:
        message: '{{ message }}'
        title: '{{ title }}'
    enabled: true
  - alias: If persistant selected
    if:
    - condition: template
      value_template: '{% if ''persistant'' in notification_channel %}true{% else
        %}false{% endif %}'
    then:
    - action: persistent_notification.create
      metadata: {}
      data:
        message: '{{message}}'
        title: '{% if bool_critical == ''ON'' %}CRITICAL : {% else %}{% endif %}{%
          if title is defined %}{{ title }}{% else %}{% endif %}'
    enabled: true
  - alias: If iPhone selected
    if:
    - condition: template
      value_template: '{% if ''iPhone'' in notification_channel %}true{% else %}false{%
        endif %}'
    then:
    - action: notify.mobile_app_iphone
      metadata: {}
      data:
        message: '{{ message }}'
        title: '{{ title }}'
        data:
          push:
            sound:
              name: '{{ sound | default(''default'') }}'
              critical: '{{ critical | int }}'
    enabled: true
  - alias: If iPad selected
    if:
    - condition: template
      value_template: '{% if ''iPad'' in notification_channel %}true{% else %}false{%
        endif %}'
    then:
    - action: notify.mobile_app_gillians_ipad
      metadata: {}
      data:
        message: '{{ message }}'
        title: '{{ title }}'
        data:
          push:
            sound:
              name: '{{ sound | default(''default'') }}'
              critical: '{{ critical | int }}'
    enabled: true
  - alias: If macBook selected
    if:
    - condition: template
      value_template: '{% if ''macBook'' in notification_channel %}true{% else %}false{%
        endif %}'
    then:
    - action: notify.mobile_app_gillians_macbook_pro_624
      metadata: {}
      data:
        message: '{{ message }}'
        title: '{{ title }}'
        data:
          push:
            sound:
              name: '{{ sound | default(''default'') }}'
              critical: '{{ critical | int }}'
    enabled: true
  description: ''
  icon: mdi:bullhorn-variant-outline
  fields:
    message:
      selector:
        text:
      name: Message
      required: true
      description: Required!
      default: no message set
    notification_channel:
      selector:
        select:
          options:
          - iPhone
          - iPad
          - macBook
          - persistant
          - sms
          - email
          - alexa
          multiple: true
      name: Notification Channel
      required: true
      default:
      - iPhone
      - iPad
      - macBook
      - persistant
    title:
      selector:
        text:
      name: Title
      required: false
    bool_critical:
      selector:
        select:
          options:
          - 'ON'
          - 'OFF'
      name: Critical
      default: 'OFF'
      required: true
    sound:
      selector:
        text:
      name: Sound
      description: 'To get sound: go to settings > companion app > notification >
        system and click copy.'
      required: true
      default: default
    sms_targets:
      selector:
        text:
          multiple: true
      name: SMS Targets
      default:
      - 7188138156@mms.att.net
      description: This is only used if sms notification target is selected!
      required: true
    email_targets:
      selector:
        text:
          multiple: true
      name: Email Targets
      description: This is only used if email notification target is selected!
      default:
      - gbtunney@mac.com
      required: true
