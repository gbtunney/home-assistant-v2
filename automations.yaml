- id: '1730622599095'
  alias: Leak Alert (Unlocated)
  description: 'todo: fix'
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.leak_sensor_group
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 30
  conditions: []
  actions:
  - variables:
      message: '{% from ''notifications.jinja'' import leak_detector_notification
        %} {{ leak_detector_notification(trigger.entity_id) }}'
  - action: logbook.log
    metadata: {}
    data:
      name: leak test problem
      message: '{{message}}'
      entity_id: '{{ trigger.entity_id }}'
  - action: script.notification_dispatcher
    metadata: {}
    data:
      notification_channel:
      - iPhone
      - persistant
      bool_critical: 'OFF'
      sound: default
      sms_targets:
      - 7188138156@mms.att.net
      email_targets:
      - gbtunney@mac.com
      message: 'Device {{ state_attr(trigger.entity_id,''friendly_name'' )  }} in
        Area: {{ area_name(trigger.entity_id) }} is detecting moisture. Please fix
        immediately!!'
    enabled: false
  mode: single
- id: '1733535410225'
  alias: Temperature Alert
  description: Alerts if temperature is below 65 or above 85
  triggers:
  - trigger: numeric_state
    entity_id:
    - input_number.dummy_thermometer
    - sensor.hygrometer_temperature
    below: 65
  - trigger: numeric_state
    entity_id:
    - input_number.dummy_thermometer
    - sensor.hygrometer_temperature
    above: 85
  conditions: []
  actions:
  - action: script.notification_dispatcher
    metadata: {}
    data:
      message: '"{% set entity = trigger.entity_id  %}ALERT! {% if trigger.above ==
        none %}Low {% else %}High {% endif %} temperature! Device: {{ trigger.to_state.name
        }} is registering temp of {{ trigger.to_state.state }}F in Area: {{ area_name(trigger.entity_id)
        }} :: Please fix!!"

        '
      notification_channel:
      - iPhone
      - iPad
      - macBook
      - persistant
      - alexa
      - sms
      bool_critical: 'OFF'
      sound: default
      sms_targets:
      - 7188138156@mms.att.net
      email_targets:
      - gbtunney@mac.com
  mode: single
- id: '1733554565177'
  alias: Motion Capture
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.ffmpeg_motion_detection_camera_1
    for:
      hours: 0
      minutes: 0
      seconds: 30
    to:
  conditions: []
  actions:
  - if:
    - condition: state
      entity_id: binary_sensor.ffmpeg_motion_detection_camera_1
      state: 'on'
      for:
        hours: 0
        minutes: 0
        seconds: 30
    then:
    - action: light.turn_on
      metadata: {}
      data:
        rgb_color:
        - 44
        - 114
        - 39
      target:
        entity_id: light.led_strip_color
    - action: script.notification_dispatcher
      metadata: {}
      data:
        notification_channel:
        - iPhone
        - persistant
        bool_critical: 'OFF'
        sound: default
        sms_targets:
        - 7188138156@mms.att.net
        email_targets:
        - gbtunney@mac.com
        message: Motion detected - green
    - action: script.notification_dispatcher
      metadata: {}
      data:
        notification_channel:
        - iPhone
        - persistant
        bool_critical: 'OFF'
        sound: default
        sms_targets:
        - 7188138156@mms.att.net
        email_targets:
        - gbtunney@mac.com
        message: Motion detected
      enabled: false
    else:
    - action: light.turn_on
      metadata: {}
      data:
        rgb_color:
        - 246
        - 26
        - 25
      target:
        entity_id: light.led_strip_color
    - action: script.notification_dispatcher
      metadata: {}
      data:
        notification_channel:
        - iPhone
        - persistant
        bool_critical: 'OFF'
        sound: default
        sms_targets:
        - 7188138156@mms.att.net
        email_targets:
        - gbtunney@mac.com
        message: Motion NOT DETECTED BACM TO RED
  mode: single
- id: '1733563292567'
  alias: Device Unavailable
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.aq_and_rept_connectivity_status_group
    for:
      hours: 0
      minutes: 6
      seconds: 0
    to:
    - 'off'
    - unknown
    - unavailable
  conditions:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_home
  actions:
  - variables:
      message: '{% from ''notifications.jinja'' import device_unavailable_notification
        %} {{ device_unavailable_notification(trigger.entity_id) }}'
      message_bk: "Device {{ state_attr(trigger.entity_id,'friendly_name' )  }} in
        Area: {{\n area_name(trigger.entity_id) }} is disconnected. Please fix immediately!!"
  - action: script.notification_dispatcher
    metadata: {}
    data:
      notification_channel:
      - iPhone
      - iPad
      - macBook
      - persistant
      - alexa
      bool_critical: 'OFF'
      sound: default
      sms_targets:
      - 7188138156@mms.att.net
      email_targets:
      - gbtunney@mac.com
      message: '{{message}}'
  - choose:
    - conditions: []
      sequence: []
    enabled: false
  mode: single
- id: '1733605050618'
  alias: Lighting & Powerstrip Connectivity Warning
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.hallway_light_status
    - binary_sensor.living_room_light_status
    - binary_sensor.bedroom_light_status
    - binary_sensor.bathroom_light_status
    - binary_sensor.seafoam_light_status
    - binary_sensor.dorn_lighting_status
    - binary_sensor.10g_m_powerstrip_status
    - binary_sensor.120g_powerstrip_status
    - binary_sensor.20g_powerstrip_status
    - binary_sensor.55g_powerstrip_status
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  conditions:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_home
  actions:
  - action: script.notification_dispatcher
    metadata: {}
    data:
      message: 'Device: {{ device_attr(trigger.entity_id, ''name'')  }} in Area: {{
        area_name(trigger.entity_id) }} is disconnected.  Please fix immediately!!'
      notification_channel:
      - iPhone
      - iPad
      - macBook
      - persistant
      - alexa
      - sms
      bool_critical: 'OFF'
      sound: default
      sms_targets:
      - 7188138156@mms.att.net
      email_targets:
      - gbtunney@mac.com
  mode: single
- id: '1733711998590'
  alias: Reptile Room Motion Light
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.ffmpeg_motion_detection_camera_2
    from: 'off'
    to: 'on'
  conditions: []
  actions:
  - action: light.turn_on
    metadata: {}
    data:
      rgb_color:
      - 129
      - 255
      - 26
    target:
      entity_id: light.led_strip_color
  - action: notify.mobile_app_iphone
    metadata: {}
    data:
      message: motion was detected
  mode: single
- id: '1733724698026'
  alias: iTag Light Color Test
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.itag_tracking_hub_itag_1_button
    - binary_sensor.itag_tracking_hub_itag_1_button_doubleclick
    - binary_sensor.itag_tracking_hub_itag_2_button
    - binary_sensor.itag_tracking_hub_itag_2_button_doubleclick
    from: 'on'
    to: 'off'
  conditions: []
  actions:
  - if:
    - condition: template
      value_template: '{% if trigger.entity_id == ''binary_sensor.itag_tracking_hub_itag_1_button''
        %}true{%else%}false{%endif%}'
    then:
    - action: light.turn_on
      metadata: {}
      data:
        rgb_color:
        - 1
        - 208
        - 80
      target:
        entity_id: light.smart_bulb_1
  - if:
    - condition: template
      value_template: '{% if trigger.entity_id == ''binary_sensor.itag_tracking_hub_itag_1_button_doubleclick''
        %}true{%else%}false{%endif%}'
    then:
    - action: light.turn_on
      metadata: {}
      data:
        rgb_color:
        - 36
        - 80
        - 255
      target:
        entity_id: light.smart_bulb_1
  - if:
    - condition: template
      value_template: '{% if trigger.entity_id == ''binary_sensor.itag_tracking_hub_itag_2_button''
        %}true{%else%}false{%endif%}'
    then:
    - action: light.turn_on
      metadata: {}
      data:
        rgb_color:
        - 251
        - 0
        - 255
      target:
        entity_id: light.smart_bulb_1
  - if:
    - condition: template
      value_template: '{% if trigger.entity_id ==''binary_sensor.itag_tracking_hub_itag_2_button_doubleclick''
        %}true{%else%}false{%endif%}'
    then:
    - action: light.turn_on
      metadata: {}
      data:
        rgb_color:
        - 255
        - 0
        - 89
      target:
        entity_id: light.smart_bulb_1
  mode: single
- id: '1735089085485'
  alias: 'Sensor: Home Assistant Last Started'
  description: ''
  triggers:
  - trigger: homeassistant
    event: start
  conditions: []
  actions:
  - action: input_datetime.set_datetime
    metadata: {}
    data:
      timestamp: '{{float(as_timestamp(now()),0)}}'
    target:
      entity_id: input_datetime.ha_last_start
  mode: single
- id: '1736553464893'
  alias: Latest Irregular Off
  description: ''
  triggers:
  - entity_id: input_boolean.alert_enabled_warn_irregular_off
    to:
    - 'off'
    - 'on'
    trigger: state
  - event_type: timer.finished
    event_data:
      entity_id: timer.notification_warn_irregular_off
    trigger: event
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.platform == ''event'' and trigger.event.event_type
          == ''timer.finished'' and trigger.event.data.entity_id == ''timer.notification_warn_irregular_off''
          }}

          '
      sequence:
      - data:
          name: Timer DONE
          message: THE TIMER IS DONE
          entity_id: timer.notification_warn_irregular_off
        action: logbook.log
      alias: The timer is finished
    - conditions:
      - condition: template
        value_template: '{{ trigger.platform == ''state'' and trigger.to_state.state
          == ''off'' and trigger.from_state.state == ''on'' }}'
      sequence:
      - data:
          name: Input Boolean OFF
          message: The input boolean alert_enabled_warn_irregular_off is OFF
          entity_id: input_boolean.alert_enabled_warn_irregular_off
        action: logbook.log
      - action: timer.start
        target:
          entity_id: timer.notification_warn_irregular_off
        data:
          duration: 00:05:00
      alias: The input boolean is off
    - conditions:
      - condition: template
        value_template: '{{ trigger.platform == ''state'' and trigger.to_state.state
          == ''on'' and trigger.from_state.state == ''off'' }}'
      sequence:
      - data:
          name: Input Boolean ON
          message: stoppinh the timer
          entity_id: input_boolean.alert_enabled_warn_irregular_off
        action: logbook.log
      - action: timer.cancel
        metadata: {}
        data: {}
        target:
          entity_id: timer.notification_warn_irregular_off
      alias: The input boolean is ""OFF (on)
  variables:
    label_id: entity_list_aquarium_group_switch
    notification_timer:
      entity_id: timer.notification_warn_irregular_off
    controlling_binary_sensor:
      entity_id:
      - input_boolean.alert_enabled_warn_irregular_off
    event_name: ACK_WARN_IRREGULAR_OFF
  mode: single
- id: '1736734609929'
  alias: Mobile App acknowledge push notification UI
  description: ''
  triggers:
  - event_type: mobile_app_notification_action
    trigger: event
    event_data: {}
  conditions:
  - condition: template
    value_template: '{{ trigger.event.data.action is defined and trigger.event.data.action
      in action_mapping  }}'
  actions:
  - variables:
      resolved:
        alert: '{{ action_mapping[trigger.event.data.action].alert }}'
        controlling_binary_sensor: '{{ action_mapping[trigger.event.data.action].controlling_binary_sensor}}'
        controlling_timer: '{{ action_mapping[trigger.event.data.action].controlling_timer}}'
      controlling_sensor_state: '{{ bool( is_state(resolved.controlling_binary_sensor
        ,[''on''] ) )}}'
      controlling_timer_state: '{{ states( resolved.controlling_timer) }}'
      error: '{{ bool( is_state(resolved.controlling_binary_sensor ,[''unavailable'',''unknown'']
        ),false  ) or  bool( is_state(resolved.controlling_timer,[''unavailable'',''unknown'']
        ),false  )}}'
  - if:
    - condition: template
      value_template: '{{bool( is_state( resolved.controlling_binary_sensor ,[''on'']),false
        )}}'
    then:
    - action: timer.pause
      metadata: {}
      data: {}
      target:
        entity_id: '{{resolved.controlling_timer}}'
    - action: logbook.log
      data:
        name: ALERT REPLACEMENT ACKNOWLEDGE
        message: 'Pausing Timer: Alert has been acknowledged. Controlling sensor {{resolved.controlling_binary_sensor}}

          ({{controlling_sensor_state|upper}}) | Timer

          {{resolved.controlling_timer }}

          ({{controlling_timer_state|upper}})

          '
        entity_id: '{{ resolved.controlling_binary_sensor }}'
      enabled: true
    else:
    - action: timer.cancel
      metadata: {}
      data: {}
      target:
        entity_id: '{{resolved.controlling_timer}}'
    - action: logbook.log
      data:
        name: ALERT REPLACEMENT ACKNOWLEDGE
        message: 'Canceling Timer:  Alert has been canceled via acknowledge script
          | Controller

          {{resolved.controlling_binary_sensor}}

          ({{controlling_sensor_state|upper}}) | Timer

          {{resolved.controlling_timer }}

          ({{controlling_timer_state|upper}})

          '
        entity_id: '{{ resolved.controlling_binary_sensor }}'
      enabled: true
  mode: single
  variables:
    action_mapping:
      ACK_WARN_TUYA_DISCONNECT:
        alert: alert.warn_irregular_off
        controlling_timer: timer.timer_warn_tuya_disconnect
        controlling_binary_sensor: binary_sensor.alert_state_warning_tuya_disconnect
      ACK_WARN_IRREGULAR_OFF:
        alert: alert.warn_irregular_off
        controlling_timer: timer.notification_warn_irregular_off
        controlling_binary_sensor: binary_sensor.alert_state_warn_irregular_off
- id: '1736748943979'
  alias: Gill BP New BK UI
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.alert_state_warn_irregular_off
    to: 'on'
    from: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
  - trigger: state
    entity_id:
    - binary_sensor.alert_state_warn_irregular_off
    to: 'off'
    from: 'on'
    for:
      hours: 0
      minutes: 2
      seconds: 0
  - trigger: event
    event_type: timer.finished
    event_data:
      entity_id: timer.notification_warn_irregular_off
  conditions: []
  actions:
  - variables:
      my_trigger: '{{trigger}}'
      my_platform: '{{trigger.platform }}'
      my_event: '{{trigger.event }}'
      my_timer: '{{notification_timer}}'
      newevent: '{{trigger.from_state}}'
      newqevent: '{{trigger.to_state}}'
      timerstatus: '{{ states(notification_timer) }}'
  - action: script.alert_replacement_script
    metadata: {}
    data:
      alert_name: 'WARNING Alert: Irregular_off'
      label_id: entity_list_aquarium_group_switch
      notification_timer: timer.notification_warn_irregular_off
      controlling_binary_sensor: binary_sensor.alert_state_warn_irregular_off
      alert_type: WARNING
      event_uid: ACK_WARN_IRREGULAR_OFF
      repeat_minutes: 5
  mode: single
  variables:
    title: Alert Warn BP New Automation
    label_id: entity_list_aquarium_group_switch
    notification_timer: timer.notification_warn_irregular_off
    controlling_binary_sensor: binary_sensor.alert_state_warn_irregular_off
    alert_type: WARNING
    event_name: ACK_WARN_IRREGULAR_OFF
- id: '1736910115749'
  alias: BP TEST
  description: ''
  use_blueprint:
    path: alert_replacement.yaml
    input:
      alert_name: 'Info Alert: Irregular_off'
      label_id: entity_list_aquarium_group_switch
      notification_timer: timer.notification_warn_irregular_off
      controlling_binary_sensor: binary_sensor.alert_state_warn_irregular_off
      alert_type: WARNING
      event_uid: ACK_WARN_IRREGULAR_OFF
      trigger_state: 'ON'
      trigger_offset_minutes: 45
      repeat_minutes: 45
- id: '1736918165710'
  alias: Auto Tuya Disconnect
  description: ''
  use_blueprint:
    path: alert_replacement.yaml
    input:
      alert_name: warning Tuya disconnect
      label_id: entity_list_tuya_connectivity_status
      notification_timer: timer.timer_warn_tuya_disconnect
      controlling_binary_sensor: binary_sensor.alert_state_warning_tuya_disconnect
      alert_type: WARNING
      event_uid: ACK_WARN_TUYA_DISCONNECT
      trigger_state: 'on'
      trigger_offset_minutes: 2
      repeat_minutes: 5
